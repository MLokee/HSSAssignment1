/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignment1;

import com.sun.org.apache.xml.internal.resolver.helpers.Debug;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;

/**
 *
 * @author Luan
 * This Assignment using CipherInputStream and CipherOutputStream to read/write 
 * from file
 */
public class DESFrame extends javax.swing.JFrame {

    private Cipher decrypt, encrypt;
    private final String ENCRYPTFILE = "encrypted.txt";//Ciphertext file
    private final String DECRYPTFILE = "decrypted.txt";//Plaintext file after decrypte
    /**
     * Creates new form DESFrame
     */
    public DESFrame() {
        try {
            initComponents();
            byte[] keyByte = "aaaaaaaa".getBytes();//initial key with 8 byte of a
            SecretKeySpec initialKey = new SecretKeySpec(keyByte, "DES");
            //Initial Encryption and Decryption 
            encrypt = Cipher.getInstance("DES/ECB/PKCS5Padding");
            encrypt.init(Cipher.ENCRYPT_MODE, initialKey);
            decrypt = Cipher.getInstance("DES/ECB/PKCS5Padding");
            decrypt.init(Cipher.DECRYPT_MODE, initialKey);
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void writeAndReadByte(InputStream input, OutputStream output)
            throws IOException {
        byte[] writeBuffer = new byte[512];
        int readBytes;
        while ((readBytes = input.read(writeBuffer)) >= 0) {
            output.write(writeBuffer, 0, readBytes);
        }
        output.close();
        input.close();
    }

    private void encrypt(InputStream input, OutputStream output) {
        output = new CipherOutputStream(output, encrypt);
        try {
            writeAndReadByte(input, output);
        } catch (IOException ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void decrypt(InputStream input, OutputStream output) {
        input = new CipherInputStream(input, decrypt);
        try {
            writeAndReadByte(input, output);
        } catch (IOException ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        keyField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        encryptFileButton = new javax.swing.JButton();
        decryptFileButton = new javax.swing.JButton();
        setKeyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(200, 60));
        setPreferredSize(new java.awt.Dimension(400, 200));

        jPanel4.setPreferredSize(new java.awt.Dimension(400, 50));

        keyField.setText("Enter the Key");
        keyField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyFieldMouseClicked(evt);
            }
        });

        jLabel1.setText("Key :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(515, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 50));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        mainPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainPanel.setLayout(new java.awt.GridLayout(1, 5, 50, 50));

        encryptFileButton.setText("Encrypt File");
        encryptFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptFileButtonActionPerformed(evt);
            }
        });
        mainPanel.add(encryptFileButton);

        decryptFileButton.setText("Decrypt File");
        decryptFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptFileButtonActionPerformed(evt);
            }
        });
        mainPanel.add(decryptFileButton);

        setKeyButton.setText("Set Key");
        setKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setKeyButtonActionPerformed(evt);
            }
        });
        mainPanel.add(setKeyButton);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptFileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.showOpenDialog(jLabel1);
        File file = chooser.getSelectedFile();
        try {
            encrypt(new FileInputStream(file), new FileOutputStream(ENCRYPTFILE));
        } catch (IOException ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("File Encrypted");
    }//GEN-LAST:event_encryptFileButtonActionPerformed

    private void setKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setKeyButtonActionPerformed
        String keyString;
        if (keyField.getText().equalsIgnoreCase("Enter the key") || keyField.getText().isEmpty()) {
            keyString = "aaaaaaaa";
        } else if (keyField.getText().length() < 8) {
            keyString = keyField.getText();
            for (int i = 0; i < 8 - keyField.getText().length(); i++) {
                keyString += "a";
            }
            System.out.println("Key Changed");
        } else {
            keyString = keyField.getText().substring(0, 8);
            System.out.println("Key Changed");
        }
        byte[] keyByte = (keyString).getBytes();
        SecretKeySpec key = new SecretKeySpec(keyByte, "DES");
        try {
            encrypt.init(Cipher.ENCRYPT_MODE, key);
            decrypt.init(Cipher.DECRYPT_MODE, key);
        } catch (InvalidKeyException  ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_setKeyButtonActionPerformed

    private void decryptFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptFileButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.showOpenDialog(jLabel1);
        File file = chooser.getSelectedFile();
        try {
            decrypt(new FileInputStream(file), new FileOutputStream(DECRYPTFILE));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DESFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("File Decrypted");
    }//GEN-LAST:event_decryptFileButtonActionPerformed

    private void keyFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keyFieldMouseClicked
        // TODO add your handling code here:
        if (keyField.getText().equalsIgnoreCase("Enter the Key")) {
            keyField.setText("");
        }
    }//GEN-LAST:event_keyFieldMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DESFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DESFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DESFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DESFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DESFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decryptFileButton;
    private javax.swing.JButton encryptFileButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField keyField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton setKeyButton;
    // End of variables declaration//GEN-END:variables
}
